@model TerminalViewModel

@{
    ViewData["Title"] = " Cloud Terminal";
}

<div class="w-100 h-100 d-flex justify-content-center">
    <div class="terminal space shadow w-75 terminalstyle">
        <div class="top">
            <div class="btns">
                <span class="circle red"></span>
                <span class="circle yellow"></span>
                <span class="circle green"></span>
            </div>
            <div class="title">Cloud Terminal</div>
        </div>
        <div class="body h-100" id="terminal"></div>
        @Html.AntiForgeryToken()
    </div>
</div>

<link rel="stylesheet" href="~/lib/jquery.terminal/css/jquery.terminal.min.css" />

@section Scripts {

    <script src="~/lib/jquery.terminal/js/jquery.terminal.min.js"></script>
    <script src="~/lib/jquery.terminal/js/autocomplete_menu.js"></script>
    <script src="~/js/terminal.js"></script>

    <script type="text/javascript">
        jQuery(function ($, undefined) {

            const keywords = @Html.Raw(Json.Serialize(Model.Commands));

            keywords.push("exit", "clear");
            
            $('#terminal').terminal(async function (command) {

                if (command !== '') {

                    if (command === 'exit') {
                        window.open('@Url.Action("Details","Drive")', '_self');

                        return;
                    }

                    terminal = new TerminalCommand;

                    var result = await terminal.eval(command, "@Url.Action("Evaluate","Terminal")");

                    this.echo(`${result.result}\n${result.message}`);

                    if (result.payload !== "") {
                        this.set_prompt(`${result.payload}> `);
                    }
                }
            },
                {
                    greetings: 'Hello [[b;white;]@User.Identity!.Name]',
                    prompt: '@Model.CurrentDirectory> ',
                    checkArity: false,
                    autocompleteMenu: true,
                    tabcompletion: true,
                    completion: keywords
                }
            );

            $.terminal.defaults.formatters.push(function (string) {
                return string.split(/((?:\s|&nbsp;)+)/).map(function (string) {
                    if (keywords.indexOf(string) != -1) {
                        return '[[b;yellow;]' + string + ']';
                    } else {
                        return string;
                    }
                }).join('');
            });
        });
    </script>
}